package org.cagrid.authenticationService.wsrf.service;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import org.cagrid.gaards.authentication.authenticationservice.AuthenticationServicePortType;

/**
 * This class was generated by Apache CXF 2.6.3
 * 2014-07-10T09:11:17.534-04:00
 * Generated source version: 2.6.3
 * 
 */
@WebServiceClient(name = "AuthenticationServiceService", 
                  wsdlLocation = "/schema/org/cagrid/AuthenticationService/AuthenticationService_service.wsdl",
                  targetNamespace = "http://cagrid.nci.nih.gov/AuthenticationService/service") 
public class AuthenticationServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://cagrid.nci.nih.gov/AuthenticationService/service", "AuthenticationServiceService");
    public final static QName AuthenticationServicePortTypePort = new QName("http://cagrid.nci.nih.gov/AuthenticationService/service", "AuthenticationServicePortTypePort");
    static {
        URL url = AuthenticationServiceService.class.getResource("/schema/org/cagrid/AuthenticationService/AuthenticationService_service.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(AuthenticationServiceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "/schema/org/cagrid/AuthenticationService/AuthenticationService_service.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public AuthenticationServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AuthenticationServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuthenticationServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AuthenticationServicePortType
     */
    @WebEndpoint(name = "AuthenticationServicePortTypePort")
    public AuthenticationServicePortType getAuthenticationServicePortTypePort() {
        return super.getPort(AuthenticationServicePortTypePort, AuthenticationServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthenticationServicePortType
     */
    @WebEndpoint(name = "AuthenticationServicePortTypePort")
    public AuthenticationServicePortType getAuthenticationServicePortTypePort(WebServiceFeature... features) {
        return super.getPort(AuthenticationServicePortTypePort, AuthenticationServicePortType.class, features);
    }

}
