
package org.cagrid.gaards.authentication.authenticationservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import org.cagrid.authenticationService.wsrf.service.AuthenticationServiceService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.6.3
 * 2014-06-12T11:19:32.271-04:00
 * Generated source version: 2.6.3
 * 
 */
public final class AuthenticationServicePortType_AuthenticationServicePortTypePort_Client {

    private static final QName SERVICE_NAME = new QName("http://cagrid.nci.nih.gov/AuthenticationService/service", "AuthenticationServiceService");

    private AuthenticationServicePortType_AuthenticationServicePortTypePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = AuthenticationServiceService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        AuthenticationServiceService ss = new AuthenticationServiceService(wsdlURL, SERVICE_NAME);
        AuthenticationServicePortType port = ss.getAuthenticationServicePortTypePort();  
        
        {
        System.out.println("Invoking authenticate...");
        org.cagrid.authenticationService.wsrf.stubs.AuthenticateRequest _authenticate_parameters = null;
        try {
            org.cagrid.authenticationService.wsrf.stubs.AuthenticateResponse _authenticate__return = port.authenticate(_authenticate_parameters);
            System.out.println("authenticate.result=" + _authenticate__return);

        } catch (org.cagrid.authenticationService.wsrf.stubs.InvalidCredentialFaultFaultMessage e) { 
            System.out.println("Expected exception: InvalidCredentialFaultFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (org.cagrid.authenticationService.wsrf.stubs.InsufficientAttributeFaultFaultMessage e) { 
            System.out.println("Expected exception: InsufficientAttributeFaultFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (org.cagrid.authenticationService.wsrf.stubs.AuthenticationProviderFaultFaultMessage e) { 
            System.out.println("Expected exception: AuthenticationProviderFaultFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking queryResourceProperties...");
        org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01.QueryResourceProperties _queryResourceProperties_queryResourcePropertiesRequest = null;
        try {
            org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01.QueryResourcePropertiesResponse _queryResourceProperties__return = port.queryResourceProperties(_queryResourceProperties_queryResourcePropertiesRequest);
            System.out.println("queryResourceProperties.result=" + _queryResourceProperties__return);

        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.UnknownQueryExpressionDialectFault e) { 
            System.out.println("Expected exception: UnknownQueryExpressionDialectFault has occurred.");
            System.out.println(e.toString());
        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.InvalidResourcePropertyQNameFault e) { 
            System.out.println("Expected exception: InvalidResourcePropertyQNameFault has occurred.");
            System.out.println(e.toString());
        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.ResourceUnknownFault e) { 
            System.out.println("Expected exception: ResourceUnknownFault has occurred.");
            System.out.println(e.toString());
        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.InvalidQueryExpressionFault e) { 
            System.out.println("Expected exception: InvalidQueryExpressionFault has occurred.");
            System.out.println(e.toString());
        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.QueryEvaluationErrorFault e) { 
            System.out.println("Expected exception: QueryEvaluationErrorFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getResourceProperty...");
        javax.xml.namespace.QName _getResourceProperty_getResourcePropertyRequest = new javax.xml.namespace.QName("", "");
        try {
            org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01.GetResourcePropertyResponse _getResourceProperty__return = port.getResourceProperty(_getResourceProperty_getResourcePropertyRequest);
            System.out.println("getResourceProperty.result=" + _getResourceProperty__return);

        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.InvalidResourcePropertyQNameFault e) { 
            System.out.println("Expected exception: InvalidResourcePropertyQNameFault has occurred.");
            System.out.println(e.toString());
        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.ResourceUnknownFault e) { 
            System.out.println("Expected exception: ResourceUnknownFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getMultipleResourceProperties...");
        org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01.GetMultipleResourceProperties _getMultipleResourceProperties_getMultipleResourcePropertiesRequest = null;
        try {
            org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01.GetMultipleResourcePropertiesResponse _getMultipleResourceProperties__return = port.getMultipleResourceProperties(_getMultipleResourceProperties_getMultipleResourcePropertiesRequest);
            System.out.println("getMultipleResourceProperties.result=" + _getMultipleResourceProperties__return);

        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.InvalidResourcePropertyQNameFault e) { 
            System.out.println("Expected exception: InvalidResourcePropertyQNameFault has occurred.");
            System.out.println(e.toString());
        } catch (org.oasis_open.docs.wsrf._2004._06.wsrf_ws_resourceproperties_1_2_draft_01_wsdl.ResourceUnknownFault e) { 
            System.out.println("Expected exception: ResourceUnknownFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getServiceSecurityMetadata...");
        org.cagrid.gaards.security.servicesecurity.GetServiceSecurityMetadataRequest _getServiceSecurityMetadata_parameters = null;
        org.cagrid.gaards.security.servicesecurity.GetServiceSecurityMetadataResponse _getServiceSecurityMetadata__return = port.getServiceSecurityMetadata(_getServiceSecurityMetadata_parameters);
        System.out.println("getServiceSecurityMetadata.result=" + _getServiceSecurityMetadata__return);


        }
        {
        System.out.println("Invoking authenticateUser...");
        org.cagrid.gaards.authentication.authenticationservice.AuthenticateUserRequest _authenticateUser_parameters = null;
        try {
            org.cagrid.gaards.authentication.authenticationservice.AuthenticateUserResponse _authenticateUser__return = port.authenticateUser(_authenticateUser_parameters);
            System.out.println("authenticateUser.result=" + _authenticateUser__return);

        } catch (InvalidCredentialFaultFaultMessage e) { 
            System.out.println("Expected exception: InvalidCredentialFaultFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (CredentialNotSupportedFaultFaultMessage e) { 
            System.out.println("Expected exception: CredentialNotSupportedFaultFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (InsufficientAttributeFaultFaultMessage e) { 
            System.out.println("Expected exception: InsufficientAttributeFaultFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (AuthenticationProviderFaultFaultMessage e) { 
            System.out.println("Expected exception: AuthenticationProviderFaultFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
